--- 
defaults:
  releaseLabel: "emr-5.8.0"
  autoTerminate: true
  instanceType: "m4.large"
  ebsRootVolumeSize: 10
  ebsSizeInGB: 32
  bidPrice: null
  variantSparkReleaseUrl: null
  variantSparkBootstrap: "{{variantSparkReleaseUrl}}/bootstrap/install-variant-spark.sh"
  master:
    instanceType: {{instanceType}}
    ebsSizeInGB: {{ebsSizeInGB}}
    bidPrice: {{bidPrice}}
  worker:
    instanceCount: 1
    instanceType: {{instanceType}}
    ebsSizeInGB: {{ebsSizeInGB}}
    bidPrice: {{bidPrice}}
  conf:
    logBucketUri: null
  ec2Attributes: {}
# these are almost liteally passed to aws emr `create-clustr` as corrsponding option
# e.g. `name` is  passed as `--name` etc.
options:  
  name: "variant-spark_{{worker.instanceType}}-{{worker.instanceCount}}"
  release-label: "{{releaseLabel}}"
  auto-terminate: {{autoTerminate}}
  applications:
  - Name: Ganglia
  - Name: Spark 
  tags:
    application: "variant-spark"
    use: "testing"
  ec2-attributes: {{ec2Attributes}}
  {{#conf.logBucketUri}}log-uri: "{{conf.logBucketUri}}"{{/conf.logBucketUri}}
  {{#conf.logBucketUri}}enable-debugging: true{{/conf.logBucketUri}}
  ebs-root-volume-size: {{ebsRootVolumeSize}} 
  service-role: "EMR_DefaultRole"
  scale-down-behavior: "TERMINATE_AT_INSTANCE_HOUR"
  instance-groups: 
  - Name: "Master Instance Group"
    InstanceCount: 1
    InstanceGroupType: "MASTER"
    InstanceType: "{{master.instanceType}}"
    {{#master.bidPrice}}BidPrice: "{{master.bidPrice}}"{{/master.bidPrice}}
    EbsConfiguration:
      EbsBlockDeviceConfigs:
      - VolumeSpecification:
          SizeInGB: {{master.ebsSizeInGB}}
          VolumeType: "gp2"
        VolumesPerInstance: 1
  - Name: "Core Instance Group"
    InstanceCount: {{worker.instanceCount}}
    InstanceGroupType: "CORE"
    InstanceType: {{worker.instanceType}}
    {{#worker.bidPrice}}BidPrice: "{{worker.bidPrice}}"{{/worker.bidPrice}}
    EbsConfiguration:
      EbsBlockDeviceConfigs:
      - VolumeSpecification:
          SizeInGB: 32
          VolumeType: "gp2"
        VolumesPerInstance: 1
  configurations:
  - Classification: "spark"
    Properties:
      maximizeResourceAllocation: "true" 
  - Classification: "spark-defaults"
    Properties:
      spark.dynamicAllocation.enabled: "false"
      spark.serializer: "org.apache.spark.serializer.KryoSerializer"
      spark.locality.wait: "10s"
  bootstrap-actions:
  - Name: "Install Variant Spark"
    Path: {{variantSparkBootstrap}}
    Args: ["--release-url", "{{variantSparkReleaseUrl}}"]
